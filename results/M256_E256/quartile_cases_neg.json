{"lowest": [{"prediction": 0.05282293260097504, "code": "    public boolean isInPlanForm() {\n        return this.inPlanForm;\n    }", "nl_input": "ORDER BY should have ability to include columns not specified in the SELECT clause\nClient request to allow an ORDER BY clause to include columns other than those specified in the SELECT clause, as in the following query:\n\nSELECT col1, col2, col3 \nFROM tableA\nORDER BY col4", "code_len": 20, "nl_len": 62, "path": "engine/src/main/java/com/metamatrix/query/sql/lang/OrderBy.java"}, {"prediction": 0.052980661392211914, "code": "  public static void clearCache() {\n    CacheUtil.getCache(EnvironmentConfigCache.class).clear();\n  }", "nl_input": "Allow package wildcard usage for filterting marshalling classes\nAllow using package wildcard filtering for including and excluding serializable types.\r\n\r\nEx:\r\nerrai.marshalling.serializableTypes=org.foo.client.* \\\r\n                                    org.abcinc.model.client.*\r\n\r\n\r\nerrai.marshalling.nonserializableTypes=org.foo.client.* \\\r\n                                       org.abcinc.model.client.*", "code_len": 26, "nl_len": 97, "path": "errai-config/src/main/java/org/jboss/errai/config/rebind/EnvUtil.java"}, {"prediction": 0.053293026983737946, "code": "    /**\n     * Returns the value of the named attribute.\n     *\n     * @param attr the name of the attribute\n     * @return the value of the attribute or null if not set\n     * @see #setAttribute\n     */\n    public Object getAttribute(String attr)\n    {\n        return attributes.get(attr);\n    }", "nl_input": "Add setting a variable $INSTALL_DRIVE with the target drive letter for Windows systems\nI have the requirement to get the driver letter part of a Windows installation path for customization purposes. I added a pre-tested and documented patch for the current IzPack trunk.", "code_len": 76, "nl_len": 55, "path": "src/lib/com/izforge/izpack/installer/AutomatedInstallData.java"}, {"prediction": 0.054406747221946716, "code": "    /**\n     * <p>Are only data manipulation statements within a transaction\n     * supported?</p>\n     * @return <code>true</code> if so; <code>false</code> otherwise\n     * @throws SQLException, should never occur\n     */\n    public boolean supportsDataManipulationTransactionsOnly() throws SQLException {\n        return false;\n    }", "nl_input": "ORDER BY should have ability to include columns not specified in the SELECT clause\nClient request to allow an ORDER BY clause to include columns other than those specified in the SELECT clause, as in the following query:\n\nSELECT col1, col2, col3 \nFROM tableA\nORDER BY col4", "code_len": 83, "nl_len": 62, "path": "client-jdbc/src/main/java/com/metamatrix/jdbc/MMDatabaseMetaData.java"}, {"prediction": 0.05555371195077896, "code": "    public static void setIpAddress(String ipAddress) {\n      threadLocalIpAddress.set(ipAddress);\n    }", "nl_input": "Disallow certain character patterns in partition names\nNew event listener to allow metastore to reject a partition name if it contains undesired character patterns such as unicode and commas.\n\nMatch pattern is implemented as a regular expression\n\nModifies append_partition to call a new MetaStorePreventListener implementation, PreAppendPartitionEvent.", "code_len": 25, "nl_len": 67, "path": "metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java"}], "q1": [{"prediction": 0.26677602529525757, "code": "  public String getExprToColumnAlias(ASTNode expr) {\n    return exprToColumnAlias.get(expr);\n  }", "nl_input": "Support \"INSERT [INTO] destination\"\nCurrently hive only supports \"INSERT OVERWRITE destination\". We should support \"INSERT [INTO] destination\".\n", "code_len": 28, "nl_len": 32, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/QBParseInfo.java"}, {"prediction": 0.26691943407058716, "code": "    /**\n     * Loads Dynamic Variables.\n     *\n     * @param automatedInstallData\n     */\n    protected void loadDynamicVariables(AutomatedInstallData automatedInstallData)\n    {\n        try\n        {\n            InputStream in = resourceManager.getInputStream(\"dynvariables\");\n            ObjectInputStream objIn = new ObjectInputStream(in);\n            Map<String, List<DynamicVariable>> dynamicvariables = (Map<String, List<DynamicVariable>>) objIn.readObject();\n            objIn.close();\n            // Initialize to prepare variable substition on several attributes\n            for (List<DynamicVariable> dynVarList : dynamicvariables.values())\n            {\n                for (DynamicVariable dynVar : dynVarList)\n                {\n                    Value value = dynVar.getValue();\n                    value.setInstallData(automatedInstallData);\n                }\n            }\n            automatedInstallData.setDynamicvariables(dynamicvariables);\n        }\n        catch (Exception e)\n        {\n            Debug.trace(\"Cannot find optional dynamic variables\");\n            System.out.println(e);\n        }\n    }", "nl_input": "Switch IzPack logging to Java logging API\nI'd appreciate to replace the Debug object by using the Java Logging API (or some alternative lightweight framework) to make it more configurable and standard-conform.", "code_len": 246, "nl_len": 46, "path": "izpack-installer/src/main/java/com/izforge/izpack/installer/container/provider/AbstractInstallDataProvider.java"}, {"prediction": 0.2669554352760315, "code": "    @Override\n    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof getVer_result)\n        return this.equals((getVer_result)that);\n      return false;\n    }", "nl_input": "Thrift should support next(nbRow) like functionality\nCurrently the java hbase api support calling next(number_of_rows) where as the thrift interface doesn't. We have a patch to get this working internally.", "code_len": 59, "nl_len": 46, "path": "src/java/org/apache/hadoop/hbase/thrift/generated/Hbase.java"}, {"prediction": 0.2669558525085449, "code": "    /* \n     * @see com.metamatrix.data.ConnectorCapabilities#supportsLikeCriteria()\n     */\n    public boolean supportsLikeCriteria() {\n        return true;\n    }", "nl_input": "ORDER BY should have ability to include columns not specified in the SELECT clause\nClient request to allow an ORDER BY clause to include columns other than those specified in the SELECT clause, as in the following query:\n\nSELECT col1, col2, col3 \nFROM tableA\nORDER BY col4", "code_len": 42, "nl_len": 62, "path": "connectors/connector-jdbc/src/main/java/org/teiid/connector/jdbc/JDBCCapabilities.java"}, {"prediction": 0.2669939398765564, "code": "\tpublic boolean supportsStoredFunctionsUsingCallSyntax() throws SQLException {\n\t\treturn false;\n\t}", "nl_input": "ORDER BY should have ability to include columns not specified in the SELECT clause\nClient request to allow an ORDER BY clause to include columns other than those specified in the SELECT clause, as in the following query:\n\nSELECT col1, col2, col3 \nFROM tableA\nORDER BY col4", "code_len": 22, "nl_len": 62, "path": "client-jdbc/src/main/java/com/metamatrix/jdbc/MMDatabaseMetaData.java"}], "median": [{"prediction": 0.3926664888858795, "code": "\t@Override\n\tpublic int getBinaryLength() {\n\t\treturn 8;\n\t}", "nl_input": "CopyableValue method to copy into new instance\nProvide a method for generic user-defined functions to clone a {{CopyableValue}}. A common use case is a {{GroupReduceFunction}} that needs to store multiple objects. With object reuse we need to make a deep copy and with type erasure we cannot call new.", "code_len": 21, "nl_len": 65, "path": "flink-core/src/main/java/org/apache/flink/types/DoubleValue.java"}, {"prediction": 0.39273032546043396, "code": "      private org.apache.hadoop.hbase.protobuf.generated.AdminProtos.ServerInfo buildParsed()\n          throws com.google.protobuf.InvalidProtocolBufferException {\n        org.apache.hadoop.hbase.protobuf.generated.AdminProtos.ServerInfo result = buildPartial();\n        if (!result.isInitialized()) {\n          throw newUninitializedMessageException(\n            result).asInvalidProtocolBufferException();\n        }\n        return result;\n      }", "nl_input": "Adding some fuction to check if a table/region is in compaction\nThis feature will be helpful to find out if a major compaction is going on.\nWe can show if it is in any minor compaction too.", "code_len": 100, "nl_len": 44, "path": "src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java"}, {"prediction": 0.3927507698535919, "code": "  /**\n   * Returns the underline bytes, will be a copy of it if it's part of another array.\n   */\n  public byte[] getBytes() {\n    // avoid copy if `base` is `byte[]`\n    if (offset == BYTE_ARRAY_OFFSET && base instanceof byte[]\n      && ((byte[]) base).length == numBytes) {\n      return (byte[]) base;\n    } else {\n      byte[] bytes = new byte[numBytes];\n      copyMemory(base, offset, bytes, BYTE_ARRAY_OFFSET, numBytes);\n      return bytes;\n    }\n  }", "nl_input": "Add property-based tests for UTF8String\nUTF8String is a class that can benefit from ScalaCheck-style property checks. Let's add these.", "code_len": 133, "nl_len": 34, "path": "unsafe/src/main/java/org/apache/spark/unsafe/types/UTF8String.java"}, {"prediction": 0.3927527368068695, "code": "    private void deployServiceBindings() {\n        _log.debug(\"Deploying service bindings ...\");\n        // activate bindings for each service\n        for (CompositeServiceModel service : _switchyardConfig.getComposite().getServices()) {\n            for (BindingModel binding : service.getBindings()) {\n                _log.debug(\"Deploying binding \" + binding.getType() + \" for service \" + service.getName());\n                Activator activator = _gatewayActivators.get(binding.getType());\n                Service serviceRef = getDomain().getService(service.getQName());\n                activator.init(serviceRef.getName(), service);\n                Activation activation = new Activation(serviceRef, activator);\n                activation.start();\n                _serviceBindings.add(activation);\n            }\n        }\n    }", "nl_input": "Create a Smooks Transformer\nNULL", "code_len": 177, "nl_len": 9, "path": "deploy/base/src/main/java/org/switchyard/deploy/internal/Deployment.java"}, {"prediction": 0.3928251266479492, "code": "  /**\n   * Create a protocol buffer GetRequest for a client Get\n   *\n   * @param regionName the name of the region to get\n   * @param get the client Get\n   * @return a protocol buffer GetRequest\n   */\n  public static GetRequest buildGetRequest(final byte[] regionName,\n      final Get get) throws IOException {\n    GetRequest.Builder builder = GetRequest.newBuilder();\n    RegionSpecifier region = buildRegionSpecifier(\n      RegionSpecifierType.REGION_NAME, regionName);\n    builder.setRegion(region);\n    builder.setGet(ProtobufUtil.toGet(get));\n    return builder.build();\n  }", "nl_input": "Shell tool to clear compaction queues\nscenario\uff1a\n1. Compact a table by mistake\n2. Compact is not completed within the specified time period\n\nIn this case, clearing the queue is a better choice, so as not to affect the stability of the cluster", "code_len": 148, "nl_len": 55, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/shaded/protobuf/RequestConverter.java"}], "q3": [{"prediction": 0.5352331399917603, "code": "    //TODO: this looses the milliseconds\n\tprotected List<?> convertTimestampToString(Function function) {\n\t\tLinkedList<Object> result = new LinkedList<Object>();\n\t\tresult.addAll(convertDateToString(function));\n\t\tresult.add('+');\n\t\tresult.addAll(convertTimeToString(function));\n\t\treturn result;\n\t}", "nl_input": "Add options to support sql server variant type\nDue to a SQL Server driver issue, a variant column cannot be directly retrieved (it needs to be confirmed if this works with JTDS).  A valid workaround is a native-query extension with an appropriate cast.\n\nBeyond that we could:\n- add an option for the translator to automatically convert to a string value\n- allow for converts from object to be pushed down.", "code_len": 80, "nl_len": 88, "path": "connectors/translator-jdbc/src/main/java/org/teiid/translator/jdbc/sybase/SybaseExecutionFactory.java"}, {"prediction": 0.5352417826652527, "code": "    private void initFields() {\n      region_ = java.util.Collections.emptyList();\n      versionOfOfflineNode_ = 0;\n    }", "nl_input": "Adding some fuction to check if a table/region is in compaction\nThis feature will be helpful to find out if a major compaction is going on.\nWe can show if it is in any minor compaction too.", "code_len": 33, "nl_len": 44, "path": "src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java"}, {"prediction": 0.5352646112442017, "code": "  /**\n   * Same as {{@link #create(String, FsPermission, EnumSet, short, long,\n   *  Progressable, int)}   except that the permission\n   *   is absolute (ie has already been masked with umask.\n   * \n   */\n  public OutputStream primitiveCreate(String src, \n                             FsPermission absPermission,\n                             EnumSet<CreateFlag> flag,\n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             int bytesPerChecksum)\n    throws IOException {\n    checkOpen();\n    OutputStream result = new DFSOutputStream(src, absPermission,\n        flag, createParent, replication, blockSize, progress, buffersize,\n        bytesPerChecksum);\n    leasechecker.put(src, result);\n    return result;\n  } ", "nl_input": "Add an api to get the visible length of a DFSDataInputStream.\nHflush guarantees that the bytes written before are visible to the new readers.  However, there is no way to get the length of the visible bytes.  The visible length is useful in some applications like SequenceFile.", "code_len": 188, "nl_len": 59, "path": "src/java/org/apache/hadoop/hdfs/DFSClient.java"}, {"prediction": 0.5352796912193298, "code": "      @Override\n      public void run() {\n        hideCurrentPage();\n        setCurrentPage(null);\n      }", "nl_input": "Builtin Injectors for Elemental 2 Elements in Errai IOC\nCurrently there are building producers for Errai DOM wrappers and gwt-user elements so that they can be injected \"out of the box\".\r\n\r\nErrai should provide similar producers for Elemental 2.", "code_len": 25, "nl_len": 63, "path": "errai-navigation/src/main/java/org/jboss/errai/ui/nav/client/local/Navigation.java"}, {"prediction": 0.535375714302063, "code": "\t@Override\n\tpublic void setValue(ByteValue value) {\n\t\tthis.value = value.value;\n\t}", "nl_input": "CopyableValue method to copy into new instance\nProvide a method for generic user-defined functions to clone a {{CopyableValue}}. A common use case is a {{GroupReduceFunction}} that needs to store multiple objects. With object reuse we need to make a deep copy and with type erasure we cannot call new.", "code_len": 28, "nl_len": 65, "path": "flink-core/src/main/java/org/apache/flink/types/ByteValue.java"}], "highest": [{"prediction": 0.9361812472343445, "code": "\t@SuppressWarnings(\"rawtypes\")\n\tprivate static QueryBuilder getQueryBuilder(String cacheName, InfinispanConnection conn) throws TranslatorException {\n\t\t\n\t\tClass<?> type = conn.getType(cacheName);\n\t\t\n\t\tQueryFactory qf = conn.getQueryFactory(cacheName);\n\t    \t\t  \n\t    QueryBuilder qb = qf.from(type);\n\n\t    return qb;\n\t}", "nl_input": "Add CRUD support to Infinispan translator/connector\nAdd CRUD support to the Infinispan translator/connector to work with JDG 6.2.", "code_len": 90, "nl_len": 35, "path": "connectors/translator-infinispan-dsl/src/main/java/org/teiid/translator/infinispan/dsl/DSLSearch.java"}, {"prediction": 0.9380344152450562, "code": "\t@SuppressWarnings(\"rawtypes\")\n\tprotected void registerMarshallers(SerializationContext ctx, ClassLoader cl) throws ResourceException {\n\n\t\ttry {\n\t\t\tctx.registerProtofile(cl.getResourceAsStream(getProtobinFile()));\n\t\t\t\n\t\t\tList<Class<?>> registeredClasses = AbstractInfinispanManagedConnectionFactory.methodUtil.getRegisteredClasses();\n\t\t\tfor (Class clz:registeredClasses) {\n\t\t\t\tBaseMarshaller m = messageMarshallerMap.get(clz.getName());\n\t\t\t\tctx.registerMarshaller(clz, m);\t\t\t\t\n\t\t\t}\n\n\t\t} catch (IOException e) {\n\t\t\tthrow new ResourceException(e);\n\t\t} catch (DescriptorValidationException e) {\n\t\t\tthrow new ResourceException(e);\n\t\t} \n\t}", "nl_input": "Add CRUD support to Infinispan translator/connector\nAdd CRUD support to the Infinispan translator/connector to work with JDG 6.2.", "code_len": 174, "nl_len": 35, "path": "connectors/translator-infinispan-dsl/src/main/java/org/teiid/resource/adapter/infinispan/dsl/base/AbstractInfinispanManagedConnectionFactory.java"}, {"prediction": 0.9393179416656494, "code": "\tvoid set(Iterator<?> edges, Collector<Tuple2<K, Message>> out, K id) {\n\t\tthis.edges = edges;\n\t\tthis.out = out;\n\t\tthis.vertexId = id;\n\t\tthis.edgesUsed = false;\n\t}", "nl_input": "Add a Pregel iteration abstraction to Gelly\nThis issue proposes to add a Pregel/Giraph-like iteration abstraction to Gelly that will only expose one UDF to the user, {{compute()}}. {{compute()}} will have access to both the vertex state and the incoming messages, and will be able to produce messages and update the vertex value.", "code_len": 64, "nl_len": 76, "path": "flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/spargel/MessagingFunction.java"}, {"prediction": 0.9441969394683838, "code": "  @Override\n  public void analyzeIndexDefinition(Table baseTable, Index index,\n      Table indexTable) throws HiveException {\n    StorageDescriptor storageDesc = index.getSd();\n    if (this.usesIndexTable() && indexTable != null) {\n      StorageDescriptor indexTableSd = storageDesc.deepCopy();\n      List<FieldSchema> indexTblCols = indexTableSd.getCols();\n      FieldSchema bucketFileName = new FieldSchema(\"_bucketname\", \"string\", \"\");\n      indexTblCols.add(bucketFileName);\n      FieldSchema offSets = new FieldSchema(\"_offsets\", \"array<bigint>\", \"\");\n      indexTblCols.add(offSets);\n      indexTable.setSd(indexTableSd);\n    }\n  }", "nl_input": "Implement bitmap indexing in Hive\nImplement bitmap index handler to complement compact indexing.", "code_len": 166, "nl_len": 15, "path": "ql/src/java/org/apache/hadoop/hive/ql/index/compact/CompactIndexHandler.java"}, {"prediction": 0.9446396827697754, "code": "\tvoid init(IterationRuntimeContext context) {\n\t\tthis.runtimeContext = context;\n\t\tthis.outValue = new Tuple2<K, Message>();\n\t\tthis.edgeIterator = new EdgesIterator<K, EV>();\n\t}", "nl_input": "Add a Pregel iteration abstraction to Gelly\nThis issue proposes to add a Pregel/Giraph-like iteration abstraction to Gelly that will only expose one UDF to the user, {{compute()}}. {{compute()}} will have access to both the vertex state and the incoming messages, and will be able to produce messages and update the vertex value.", "code_len": 56, "nl_len": 76, "path": "flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/spargel/MessagingFunction.java"}]}