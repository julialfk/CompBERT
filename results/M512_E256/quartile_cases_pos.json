{"lowest": [{"prediction": 0.07440987974405289, "code": "  private static void updateFrameworkProperties(final Map<String, String> frameworkProps, final String key, final String value) {\n    if (frameworkProps.containsKey(key)) {\n      if (isListValuedProperty(key)) {\n        // TODO should validate that different values don't conflict\n        final String oldValue = frameworkProps.get(key);\n        final String newValue = oldValue + \" \" + value;\n        log.debug(\"Merging property {} = {}\", key, newValue);\n        frameworkProps.put(key, newValue);\n      } else {\n        log.warn(\"The property {} has been set multiple times.\", key);\n        frameworkProps.put(key, value);\n      }\n    } else {\n      frameworkProps.put(key, value);\n    }\n  }", "nl_input": "Allow package wildcard usage for filterting marshalling classes\nAllow using package wildcard filtering for including and excluding serializable types.\r\n\r\nEx:\r\nerrai.marshalling.serializableTypes=org.foo.client.* \\\r\n                                    org.abcinc.model.client.*\r\n\r\n\r\nerrai.marshalling.nonserializableTypes=org.foo.client.* \\\r\n                                       org.abcinc.model.client.*", "code_len": 174, "nl_len": 97, "path": "errai-config/src/main/java/org/jboss/errai/config/rebind/EnvUtil.java"}, {"prediction": 0.07876590639352798, "code": "    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public PropertyModel setName(String name) {\n        setModelAttribute(PropertyModel.NAME, name);\n        return this;\n    }", "nl_input": "Add runtime configuration\nWe need to add a runtime configuration to externalize a number of our runtime settings.  Tops on the list for 0.1 is the list of activators used by a Deployer.  The list should be pulled from the runtime config in Deployer.  \n\nSome attention will have to be paid to how this impacts our test setup, which depends on Deployer to register activators.  We will need a default runtime configuration or a way to add activators as part of a MixIn, which actually would be kinda cool.", "code_len": 47, "nl_len": 117, "path": "config/src/main/java/org/switchyard/config/model/domain/v1/V1PropertyModel.java"}, {"prediction": 0.08154487609863281, "code": "    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public String getName() {\n        return getModelAttribute(PropertyModel.NAME);\n    }", "nl_input": "Add runtime configuration\nWe need to add a runtime configuration to externalize a number of our runtime settings.  Tops on the list for 0.1 is the list of activators used by a Deployer.  The list should be pulled from the runtime config in Deployer.  \n\nSome attention will have to be paid to how this impacts our test setup, which depends on Deployer to register activators.  We will need a default runtime configuration or a way to add activators as part of a MixIn, which actually would be kinda cool.", "code_len": 36, "nl_len": 117, "path": "config/src/main/java/org/switchyard/config/model/domain/v1/V1PropertyModel.java"}, {"prediction": 0.08403070271015167, "code": "    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public String getValue() {\n        return getModelAttribute(PropertyModel.VALUE);\n    }", "nl_input": "Add runtime configuration\nWe need to add a runtime configuration to externalize a number of our runtime settings.  Tops on the list for 0.1 is the list of activators used by a Deployer.  The list should be pulled from the runtime config in Deployer.  \n\nSome attention will have to be paid to how this impacts our test setup, which depends on Deployer to register activators.  We will need a default runtime configuration or a way to add activators as part of a MixIn, which actually would be kinda cool.", "code_len": 36, "nl_len": 117, "path": "config/src/main/java/org/switchyard/config/model/domain/v1/V1PropertyModel.java"}, {"prediction": 0.08916637301445007, "code": "    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public PropertyModel setValue(String value) {\n        setModelAttribute(PropertyModel.VALUE, value);\n        return this;\n    }", "nl_input": "Add runtime configuration\nWe need to add a runtime configuration to externalize a number of our runtime settings.  Tops on the list for 0.1 is the list of activators used by a Deployer.  The list should be pulled from the runtime config in Deployer.  \n\nSome attention will have to be paid to how this impacts our test setup, which depends on Deployer to register activators.  We will need a default runtime configuration or a way to add activators as part of a MixIn, which actually would be kinda cool.", "code_len": 47, "nl_len": 117, "path": "config/src/main/java/org/switchyard/config/model/domain/v1/V1PropertyModel.java"}], "q1": [{"prediction": 0.312875896692276, "code": "    @Override\n    public void beforeDir(File file, PackFile pack) throws Exception\n    {\n        performAllActions(currentPack, BSFAction.BEFOREDIR, null, new Object[]{file, pack});\n    }", "nl_input": "Switch IzPack logging to Java logging API\nI'd appreciate to replace the Debug object by using the Java Logging API (or some alternative lightweight framework) to make it more configurable and standard-conform.", "code_len": 50, "nl_len": 46, "path": "izpack-event/src/main/java/com/izforge/izpack/event/BSFInstallerListener.java"}, {"prediction": 0.31326907873153687, "code": "      public Builder setCompactionState(org.apache.hadoop.hbase.protobuf.generated.AdminProtos.GetRegionInfoResponse.CompactionState value) {\n        if (value == null) {\n          throw new NullPointerException();\n        }\n        bitField0_ |= 0x00000002;\n        compactionState_ = value;\n        onChanged();\n        return this;\n      }", "nl_input": "Adding some fuction to check if a table/region is in compaction\nThis feature will be helpful to find out if a major compaction is going on.\nWe can show if it is in any minor compaction too.", "code_len": 83, "nl_len": 44, "path": "src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java"}, {"prediction": 0.3133786618709564, "code": "    /**\n     * Deletes the temporary directory and all it's contents immediately\n     */\n    @Override\n    public void cleanUp()\n    {\n        if (null != tempdir)\n        {\n            if (deleteOnExit)\n            {\n                if (!FileUtils.deleteRecursively(tempdir))\n                {\n                    logger.warning(\"Failed to properly clean up files in \"\n                            + tempdir.getAbsolutePath()\n                            + \" manual clean up may be required.\");\n                }\n            }\n            else\n            {\n                logger.warning(\"Temporary directory has not been cleaned up. Files have been left in: \" + tempdir.getAbsolutePath());\n\n            }\n        }\n        else\n        {\n            logger.warning(\"Temporary directory registered for cleanup but there is no such directory\");\n        }\n    }", "nl_input": "Switch IzPack logging to Java logging API\nI'd appreciate to replace the Debug object by using the Java Logging API (or some alternative lightweight framework) to make it more configurable and standard-conform.", "code_len": 177, "nl_len": 46, "path": "izpack-installer/src/main/java/com/izforge/izpack/util/TemporaryDirectory.java"}, {"prediction": 0.3135456442832947, "code": "\t@Override\n\tpublic BooleanValue copy() {\n\t\treturn new BooleanValue(this.value);\n\t}", "nl_input": "CopyableValue method to copy into new instance\nProvide a method for generic user-defined functions to clone a {{CopyableValue}}. A common use case is a {{GroupReduceFunction}} that needs to store multiple objects. With object reuse we need to make a deep copy and with type erasure we cannot call new.", "code_len": 26, "nl_len": 65, "path": "flink-core/src/main/java/org/apache/flink/types/BooleanValue.java"}, {"prediction": 0.3138633966445923, "code": "    public org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos.ClearCompactionQueuesRequest getDefaultInstanceForType() {\n      return DEFAULT_INSTANCE;\n    }", "nl_input": "Shell tool to clear compaction queues\nscenario\uff1a\n1. Compact a table by mistake\n2. Compact is not completed within the specified time period\n\nIn this case, clearing the queue is a better choice, so as not to affect the stability of the cluster", "code_len": 40, "nl_len": 55, "path": "hbase-protocol-shaded/src/main/java/org/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos.java"}], "median": [{"prediction": 0.5233877897262573, "code": "    /**\n     * Return true if this method has a *param.\n     *\n     * @return true if *param exists\n     */\n    public Boolean hasParam() {\n        return _matrixParam || _queryParam || _pathParam;\n    }", "nl_input": "Support RESTEasy as a provider for REST gateway bindings\nCreate a distinct REST Gateway component based on RESTEasy.  User should be able to specify an annotated JAX-RS class for the endpoint configuration.  Ideally, the endpoint is registered directly with the existing AS http listener instead of creating a distinct HTTP listener for this gateway.", "code_len": 57, "nl_len": 69, "path": "common/rest/src/main/java/org/switchyard/component/common/rest/RsMethod.java"}, {"prediction": 0.5235205888748169, "code": "    /**\n     * @param clause Clause to check recursively\n     * @return True if tree has outer joins, false otherwise\n     */\n    static boolean hasOuterJoins(FromClause clause) {\n    \tif (clause instanceof SubqueryFromClause) {\n    \t\tif (((SubqueryFromClause)clause).isLateral()) { \n    \t\t\treturn true;\n    \t\t}\n    \t\treturn false;\n    \t}\n        if(clause instanceof UnaryFromClause) {\n            return false;\n        }\n        JoinPredicate jp = (JoinPredicate) clause;\n        if(jp.getJoinType().isOuter()) {\n            return true;\n        }\n        // Walk children\n        boolean childHasOuter = hasOuterJoins(jp.getLeftClause());\n        if(childHasOuter) {\n            return true;\n        }\n        return hasOuterJoins(jp.getRightClause());\n    }", "nl_input": "Support Lateral join and procedure pushdown\nLateral joins of the form:\n\nselect ... from x inner join lateral (... x.col ...) as y on ...\n\nHave been supported for some time, but not the ability to push them to source.\n\nA highly related scenario is to be able to push procedures used directly or in lateral joins with the rest of their plan:\n\nselect ... from x inner join lateral (call proc(.. x.col ...)) as y on ...", "code_len": 202, "nl_len": 109, "path": "engine/src/main/java/org/teiid/query/optimizer/relational/rules/RuleCollapseSource.java"}, {"prediction": 0.523922324180603, "code": "  @Override\n  public void callback(Message message) {\n    if (noArgs) {\n      try {\n        service.invoke(delegate);\n      } catch (Exception e) {\n        throw new MessageDeliveryFailure(e);\n      }\n    }\n    else {\n      try {\n        service.invoke(delegate, message);\n      } catch (Exception e) {\n        throw new MessageDeliveryFailure(e);\n      }\n    }\n  }", "nl_input": "Add integration tests for @Service annotations on fields and methods\nThe @Service annotation allows targeting methods and fields in addition to types, but there are no tests for this type of usage.", "code_len": 104, "nl_len": 38, "path": "errai-bus/src/main/java/org/jboss/errai/bus/server/io/ServiceMethodCallback.java"}, {"prediction": 0.5246233940124512, "code": "  public void postClearCompactionQueues() throws IOException {\n    execOperation(coprocessors.isEmpty() ? null : new CoprocessorOperation() {\n      @Override\n      public void call(RegionServerObserver oserver,\n                       ObserverContext<RegionServerCoprocessorEnvironment> ctx) throws IOException {\n        oserver.postClearCompactionQueues(ctx);\n      }\n    });\n  }", "nl_input": "Shell tool to clear compaction queues\nscenario\uff1a\n1. Compact a table by mistake\n2. Compact is not completed within the specified time period\n\nIn this case, clearing the queue is a better choice, so as not to affect the stability of the cluster", "code_len": 88, "nl_len": 55, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RegionServerCoprocessorHost.java"}, {"prediction": 0.5258514285087585, "code": "  @Override\n  public void write(int arg0) throws IOException {\n    throw new UnsupportedOperationException();\n  }", "nl_input": "Implement bitmap indexing in Hive\nImplement bitmap index handler to complement compact indexing.", "code_len": 25, "nl_len": 15, "path": "ql/src/java/org/apache/hadoop/hive/ql/index/bitmap/BitmapObjectOutput.java"}], "q3": [{"prediction": 0.7246477603912354, "code": "\tprivate static Query createRangeAboveQuery(Column column, Object value,\n\t\t\tBooleanJunction<BooleanJunction> junction, QueryBuilder queryBuilder) {\n\n\t\tQuery queryKey = queryBuilder.range()\n\t\t\t\t.onField(column.getNameInSource())\n\t\t\t\t.above(value).excludeLimit().createQuery();\n\t\tjunction.must(queryKey);\n\t\treturn queryKey;\n\t}", "nl_input": "Add CRUD support to Infinispan translator/connector\nAdd CRUD support to the Infinispan translator/connector to work with JDG 6.2.", "code_len": 94, "nl_len": 35, "path": "connectors/translator-object/src/main/java/org/teiid/translator/object/infinispan/LuceneSearch.java"}, {"prediction": 0.7246930003166199, "code": "    /**\n\n     * Compare the specified contents as XML.\n\n     * @param content1 The first content.\n\n     * @param content2 The second content.\n\n     * @return true if equals, false otherwise.\n\n     * @throws ParserConfigurationException Parser confiuration exception\n\n     * @throws SAXException SAX exception\n\n     * @throws IOException If unable to read the stream\n\n     */\n\n    public static boolean compareXMLContent(final String content1, final String content2)\n\n        throws ParserConfigurationException, SAXException, IOException {\n\n        return compareXMLContent(new StringReader(content1), new StringReader(content2));\n\n    }", "nl_input": "Basic SOAP Gateway\nCreate a basic SOAP Gateway that is capable of exposing SwitchYard services over SOAP/HTTP and also registering external SOAP/HTTP endpoints as local services on the bus.  Note that this is a single component and not two separate pieces (i.e. one component to send and one to receive).", "code_len": 144, "nl_len": 65, "path": "soap/src/main/java/org/switchyard/soap/util/XMLHelper.java"}, {"prediction": 0.724728524684906, "code": "  @Override\n  public FSDataInputStream open(Path f, int buffersize) throws IOException {\n    URL u = getNamenodeURL(\"/data\" + f.toUri().getPath(), \"ugi=\" + ugi);\n    return new FSDataInputStream(new ByteRangeInputStream(u));\n  }", "nl_input": "Add support for byte-ranges to hftp\nSupport should be similar to http byte-serving.", "code_len": 68, "nl_len": 20, "path": "src/java/org/apache/hadoop/hdfs/HftpFileSystem.java"}, {"prediction": 0.7248892188072205, "code": "    /**\n     * Sets the RESTEasy Service name.\n     * \n     * @param serviceName the serviceName to set\n     */\n    public void setServiceName(QName serviceName) {\n        _serviceName = serviceName;\n    }", "nl_input": "Support RESTEasy as a provider for REST gateway bindings\nCreate a distinct REST Gateway component based on RESTEasy.  User should be able to specify an annotated JAX-RS class for the endpoint configuration.  Ideally, the endpoint is registered directly with the existing AS http listener instead of creating a distinct HTTP listener for this gateway.", "code_len": 50, "nl_len": 69, "path": "resteasy/src/main/java/org/switchyard/component/resteasy/config/model/RESTEasyBindingModel.java"}, {"prediction": 0.7250210642814636, "code": "  private Optional<Supplier<Object>> maybeCreateUIGetter(final Object component) {\n    if (component instanceof TakesValue) {\n      return createTakesValueGetter((TakesValue) component);\n    }\n    else if (component instanceof HasText) {\n      return createHasTextGetter((HasText) component);\n    }\n    else if (component instanceof IsElement) {\n      return maybeCreateElementValueGetter(BoundUtil.asElement(((IsElement) component).getElement()));\n    }\n    else if (component instanceof org.jboss.errai.common.client.api.elemental2.IsElement) {\n      return maybeCreateElementValueGetter(BoundUtil.asElement(((org.jboss.errai.common.client.api.elemental2.IsElement) component).getElement()));\n    }\n    else if (isElement(component)) {\n      return maybeCreateElementValueGetter(BoundUtil.asElement(component));\n    }\n    else {\n      return Optional.empty();\n    }\n  }", "nl_input": "Builtin Injectors for Elemental 2 Elements in Errai IOC\nCurrently there are building producers for Errai DOM wrappers and gwt-user elements so that they can be injected \"out of the box\".\r\n\r\nErrai should provide similar producers for Elemental 2.", "code_len": 223, "nl_len": 63, "path": "errai-data-binding/src/main/java/org/jboss/errai/databinding/client/BindableProxyAgent.java"}], "highest": [{"prediction": 0.9531679153442383, "code": "    /**\n\n     * The handler method that handles responses from a WebService.\n\n     * @param exchange the Exchange\n\n     * @throws HandlerException handler exception\n\n     */\n\n    @Override\n\n    public void handleMessage(final Exchange exchange) throws HandlerException {\n\n        try {\n\n            _response.set(_decomposer.decompose(exchange.getMessage()));\n\n        } catch (SOAPException se) {\n\n            throw new HandlerException(\"Unexpected exception generating SOAP Message\", se);\n\n        }\n\n    }", "nl_input": "Basic SOAP Gateway\nCreate a basic SOAP Gateway that is capable of exposing SwitchYard services over SOAP/HTTP and also registering external SOAP/HTTP endpoints as local services on the bus.  Note that this is a single component and not two separate pieces (i.e. one component to send and one to receive).", "code_len": 119, "nl_len": 65, "path": "soap/src/main/java/org/switchyard/soap/InboundHandler.java"}, {"prediction": 0.953667938709259, "code": "  /**\n   * Returns the column at `ordinal`.\n   */\n  public ColumnVector column(int ordinal) { return columns[ordinal]; }", "nl_input": "Implement columnar in memory representation\nTungsten can benefit from having a columnar in memory representation which can provide a few benefits:\n - Enables vectorized execution\n - Improves memory efficiency (memory is more tightly packed)\n - Enables cheap serialization/zero-copy transfer with third party components (e.g. numpy)\n ", "code_len": 32, "nl_len": 75, "path": "sql/core/src/main/java/org/apache/spark/sql/execution/vectorized/ColumnarBatch.java"}, {"prediction": 0.9646131992340088, "code": "    /**\n     * Override method to utilize the cache\n     */\n    protected Metadata getMetadata( Artifact artifact )\n        throws RepositoryQueryLayerException\n    {\n        Metadata metadata = (Metadata) cache.get( artifact.getId() );\n        \n        if ( metadata == null )\n        {\n            metadata = super.getMetadata( artifact );\n            cache.put( artifact.getId(), metadata );\n        }\n        \n        return metadata;\n    }", "nl_input": "caching repository query interface\nneed to be able to query the repository to see if artifacts exist, what versions are available, etc. This needs to interoperate with the indexing, and where applicable should cache information, balancing the need to keep a low memory overhead but avoid repetitive disk reads on metadata files.", "code_len": 98, "nl_len": 65, "path": "maven-repository-reports-standard/src/main/java/org/apache/maven/repository/reporting/CachedRepositoryQueryLayer.java"}, {"prediction": 0.964634358882904, "code": "    /**\n\n     * The handler method that invokes the actual Webservice when the\n\n     * component is used as a WS consumer.\n\n     * @param exchange the Exchange\n\n     * @throws HandlerException handler exception\n\n     */\n\n    @Override\n\n    public void handleMessage(final Exchange exchange) throws HandlerException {\n\n        try {\n\n            SOAPMessage request = _decomposer.decompose(exchange.getMessage());\n\n            SOAPMessage response = invokeService(request);\n\n            if (response != null) {\n\n                Message message = _composer.compose(response);\n\n                exchange.send(message);\n\n            }\n\n        } catch (SOAPException se) {\n\n            // generate fault\n\n            LOGGER.error(se);\n\n        }\n\n    }", "nl_input": "Basic SOAP Gateway\nCreate a basic SOAP Gateway that is capable of exposing SwitchYard services over SOAP/HTTP and also registering external SOAP/HTTP endpoints as local services on the bus.  Note that this is a single component and not two separate pieces (i.e. one component to send and one to receive).", "code_len": 178, "nl_len": 65, "path": "soap/src/main/java/org/switchyard/soap/OutboundHandler.java"}, {"prediction": 0.9647125601768494, "code": "    /**\n     * Override method to utilize the cache\n     */\n    protected Metadata getMetadata( Artifact artifact )\n        throws RepositoryQueryLayerException\n    {\n        Metadata metadata = null;\n        \n        if ( cacheMetadata.containsKey( artifact.getId() ) )\n        {\n            cacheHits++;\n            metadata = (Metadata) cacheMetadata.get( artifact.getId() );\n        }\n        else\n        {\n            metadata = super.getMetadata( artifact );\n            cacheMetadata.put( artifact.getId(), metadata );\n        }\n        \n        return metadata;\n    }", "nl_input": "caching repository query interface\nneed to be able to query the repository to see if artifacts exist, what versions are available, etc. This needs to interoperate with the indexing, and where applicable should cache information, balancing the need to keep a low memory overhead but avoid repetitive disk reads on metadata files.", "code_len": 127, "nl_len": 65, "path": "maven-repository-reports-standard/src/main/java/org/apache/maven/repository/reporting/CachedRepositoryQueryLayer.java"}]}