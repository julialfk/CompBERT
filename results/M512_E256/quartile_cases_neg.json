{"lowest": [{"prediction": 0.051632270216941833, "code": "    /**\n     * Returns the value of the named attribute.\n     *\n     * @param attr the name of the attribute\n     * @return the value of the attribute or null if not set\n     * @see #setAttribute\n     */\n    public Object getAttribute(String attr)\n    {\n        return attributes.get(attr);\n    }", "nl_input": "Add setting a variable $INSTALL_DRIVE with the target drive letter for Windows systems\nI have the requirement to get the driver letter part of a Windows installation path for customization purposes. I added a pre-tested and documented patch for the current IzPack trunk.", "code_len": 76, "nl_len": 55, "path": "src/lib/com/izforge/izpack/installer/AutomatedInstallData.java"}, {"prediction": 0.055692609399557114, "code": "  /**\n   * @return the context\n   */\n  public Context getContext() {\n    return ctx;\n  }", "nl_input": "sorted merge join\nIf the input tables are sorted on the join key, and a mapjoin is being performed, it is useful to exploit the sorted properties of the table.\nThis can lead to substantial cpu savings - this needs to work across bucketed map joins also.\n\nSince, sorted properties of a table are not enforced currently, a new parameter can be added to specify to use the sort-merge join.\n", "code_len": 27, "nl_len": 90, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/ParseContext.java"}, {"prediction": 0.0557221919298172, "code": "  /**\n   * @return an instance of {@link EnvironmentConfig}. Do NOT retain a reference to this value. Call every time\n   *         you need additional configuration information.\n   */\n  public static EnvironmentConfig getEnvironmentConfig() {\n    return CacheUtil.getCache(EnvironmentConfigCache.class).get();\n  }", "nl_input": "Allow package wildcard usage for filterting marshalling classes\nAllow using package wildcard filtering for including and excluding serializable types.\r\n\r\nEx:\r\nerrai.marshalling.serializableTypes=org.foo.client.* \\\r\n                                    org.abcinc.model.client.*\r\n\r\n\r\nerrai.marshalling.nonserializableTypes=org.foo.client.* \\\r\n                                       org.abcinc.model.client.*", "code_len": 70, "nl_len": 97, "path": "errai-config/src/main/java/org/jboss/errai/config/rebind/EnvUtil.java"}, {"prediction": 0.05880027264356613, "code": "    protected String getOverrideRenameToValue(IXMLElement f) throws CompilerException {\n        String override_val = f.getAttribute(\"override\");\n        String overrideRenameTo = f.getAttribute(\"overrideRenameTo\");\n\n        if (overrideRenameTo != null && override_val == null) {\n            assertionHelper.parseError(f, \"Attribute \\\"overrideRenameTo\\\" requires attribute \\\"override\\\" to be set\");\n        }\n\n        return overrideRenameTo;\n    }", "nl_input": "Support the creation of a temporary directory at install time which is cleaned up when install completes\nA temporary directory which can be referenced in the install.xml would make the management of files needed at install time much simpler. The attached patch (to the git head as of 2010/08/24) adds support for one or more temporary directories which are automatically cleaned up when the installer completes. To aid in debugging temporary directories are not deleted when tracing is enabled.", "code_len": 102, "nl_len": 91, "path": "izpack-compiler/src/main/java/com/izforge/izpack/compiler/CompilerConfig.java"}, {"prediction": 0.05929722264409065, "code": "  public static void clearCache() {\n    CacheUtil.getCache(EnvironmentConfigCache.class).clear();\n  }", "nl_input": "Allow package wildcard usage for filterting marshalling classes\nAllow using package wildcard filtering for including and excluding serializable types.\r\n\r\nEx:\r\nerrai.marshalling.serializableTypes=org.foo.client.* \\\r\n                                    org.abcinc.model.client.*\r\n\r\n\r\nerrai.marshalling.nonserializableTypes=org.foo.client.* \\\r\n                                       org.abcinc.model.client.*", "code_len": 26, "nl_len": 97, "path": "errai-config/src/main/java/org/jboss/errai/config/rebind/EnvUtil.java"}], "q1": [{"prediction": 0.20603792369365692, "code": "    /**\n     * Get the default path for Windows (i.e Program Files/...).\n     * Windows has a Setting for this in the environment and in the registry.\n     * Just try to use the setting in the environment. If it fails for whatever reason, we take the former solution (buildWindowsDefaultPathFromProps).\n     *\n     * @return The Windows default installation path for applications.\n     */\n    private String buildWindowsDefaultPath()\n    {\n        try\n        {\n            //get value from environment...\n            String prgFilesPath = IoHelper.getenv(\"ProgramFiles\");\n            if (prgFilesPath != null && prgFilesPath.length() > 0)\n            {\n                return prgFilesPath + File.separatorChar;\n            }\n            else\n            {\n                return buildWindowsDefaultPathFromProps();\n            }\n        }\n        catch (Exception x)\n        {\n            x.printStackTrace();\n            return buildWindowsDefaultPathFromProps();\n        }\n    }", "nl_input": "Switch IzPack logging to Java logging API\nI'd appreciate to replace the Debug object by using the Java Logging API (or some alternative lightweight framework) to make it more configurable and standard-conform.", "code_len": 223, "nl_len": 46, "path": "izpack-installer/src/main/java/com/izforge/izpack/installer/container/provider/AbstractInstallDataProvider.java"}, {"prediction": 0.2061106413602829, "code": "  @Override\n  protected void writeConfigurable() throws Exception {\n\n    if (configurable == null) {\n        Debug.log(\"Registry key \" +\n          this.key +\n          \" did not exist and is not allowed to be created\");\n      return;\n    }\n\n    try {\n      Reg r = (Reg) configurable;\n      r.store();\n    } catch (IOException ioe) {\n      throw new Exception(ioe);\n    }\n  }", "nl_input": "Switch IzPack logging to Java logging API\nI'd appreciate to replace the Debug object by using the Java Logging API (or some alternative lightweight framework) to make it more configurable and standard-conform.", "code_len": 105, "nl_len": 46, "path": "izpack-util/src/main/java/com/izforge/izpack/util/config/RegistryTask.java"}, {"prediction": 0.20611511170864105, "code": "\t@Override\n    public C getConnection(F factory, ExecutionContext executionContext) throws TranslatorException {\n\t\treturn delegate.getConnection(factory, executionContext);\n\t}", "nl_input": "Support Lateral join and procedure pushdown\nLateral joins of the form:\n\nselect ... from x inner join lateral (... x.col ...) as y on ...\n\nHave been supported for some time, but not the ability to push them to source.\n\nA highly related scenario is to be able to push procedures used directly or in lateral joins with the rest of their plan:\n\nselect ... from x inner join lateral (call proc(.. x.col ...)) as y on ...", "code_len": 34, "nl_len": 109, "path": "api/src/main/java/org/teiid/translator/BaseDelegatingExecutionFactory.java"}, {"prediction": 0.20611624419689178, "code": "\t/**\n\t * If a scalar subquery can be projected.\n\t * @return\n\t */\n\tpublic boolean supportsScalarSubqueryProjection() {\n\t\treturn supportsScalarSubqueries();\n\t}", "nl_input": "Support Lateral join and procedure pushdown\nLateral joins of the form:\n\nselect ... from x inner join lateral (... x.col ...) as y on ...\n\nHave been supported for some time, but not the ability to push them to source.\n\nA highly related scenario is to be able to push procedures used directly or in lateral joins with the rest of their plan:\n\nselect ... from x inner join lateral (call proc(.. x.col ...)) as y on ...", "code_len": 45, "nl_len": 109, "path": "api/src/main/java/org/teiid/translator/ExecutionFactory.java"}, {"prediction": 0.20613577961921692, "code": "    public static RollWALWriterRequest getDefaultInstance() {\n      return defaultInstance;\n    }", "nl_input": "Adding some fuction to check if a table/region is in compaction\nThis feature will be helpful to find out if a major compaction is going on.\nWe can show if it is in any minor compaction too.", "code_len": 20, "nl_len": 44, "path": "src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java"}], "median": [{"prediction": 0.28544679284095764, "code": "    public org.apache.hadoop.hbase.protobuf.generated.AdminProtos.WALEntry.WALKey getKey() {\n      return key_;\n    }", "nl_input": "Adding some fuction to check if a table/region is in compaction\nThis feature will be helpful to find out if a major compaction is going on.\nWe can show if it is in any minor compaction too.", "code_len": 34, "nl_len": 44, "path": "src/main/java/org/apache/hadoop/hbase/protobuf/generated/AdminProtos.java"}, {"prediction": 0.28544852137565613, "code": "  public static boolean getBoolVar(Configuration conf, ConfVars var) {\n    assert (var.valClass == Boolean.class);\n    return conf.getBoolean(var.varname, var.defaultBoolVal);\n  }", "nl_input": "Enable QOP configuration for Hive Server 2 thrift transport\nThe QoP for hive server 2 should be configurable to enable encryption. A new configuration should be exposed \"hive.server2.thrift.sasl.qop\". This would give greater control configuring hive server 2 service.", "code_len": 49, "nl_len": 57, "path": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java"}, {"prediction": 0.2854900658130646, "code": "      public org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos.WALEntry build() {\n        org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos.WALEntry result = buildPartial();\n        if (!result.isInitialized()) {\n          throw newUninitializedMessageException(result);\n        }\n        return result;\n      }", "nl_input": "Shell tool to clear compaction queues\nscenario\uff1a\n1. Compact a table by mistake\n2. Compact is not completed within the specified time period\n\nIn this case, clearing the queue is a better choice, so as not to affect the stability of the cluster", "code_len": 84, "nl_len": 55, "path": "hbase-protocol-shaded/src/main/java/org/apache/hadoop/hbase/shaded/protobuf/generated/AdminProtos.java"}, {"prediction": 0.2854941487312317, "code": "  @Override\n  public int hashCode() {\n    int result = 1;\n    for (int i = 0; i < numBytes; i ++) {\n      result = 31 * result + getByte(i);\n    }\n    return result;\n  }", "nl_input": "Add property-based tests for UTF8String\nUTF8String is a class that can benefit from ScalaCheck-style property checks. Let's add these.", "code_len": 57, "nl_len": 34, "path": "unsafe/src/main/java/org/apache/spark/unsafe/types/UTF8String.java"}, {"prediction": 0.28553107380867004, "code": "    public void setArguments(List<Argument> parameters) {\n        this.arguments = parameters;\n    }", "nl_input": "Support Lateral join and procedure pushdown\nLateral joins of the form:\n\nselect ... from x inner join lateral (... x.col ...) as y on ...\n\nHave been supported for some time, but not the ability to push them to source.\n\nA highly related scenario is to be able to push procedures used directly or in lateral joins with the rest of their plan:\n\nselect ... from x inner join lateral (call proc(.. x.col ...)) as y on ...", "code_len": 24, "nl_len": 109, "path": "api/src/main/java/org/teiid/language/Call.java"}], "q3": [{"prediction": 0.46206116676330566, "code": "    public boolean ifHasTransformOrUDTF() {\n      return hasTransformOrUDTF;\n    }", "nl_input": "Support \"INSERT [INTO] destination\"\nCurrently hive only supports \"INSERT OVERWRITE destination\". We should support \"INSERT [INTO] destination\".\n", "code_len": 23, "nl_len": 32, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java"}, {"prediction": 0.4620888829231262, "code": "  public boolean isWrapperFor(Class<?> iface) throws SQLException {\n    // TODO Auto-generated method stub\n    throw new SQLException(\"Method not supported\");\n  }", "nl_input": "Enable QOP configuration for Hive Server 2 thrift transport\nThe QoP for hive server 2 should be configurable to enable encryption. A new configuration should be exposed \"hive.server2.thrift.sasl.qop\". This would give greater control configuring hive server 2 service.", "code_len": 36, "nl_len": 57, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java"}, {"prediction": 0.46213164925575256, "code": "    public boolean hasTempTable(String tempTableName) {\n    \treturn groupToTupleSourceID.containsKey(tempTableName);\n    }", "nl_input": "Add support for not null and auto increment for temp table columns\nIt would be good to have auto increment and not null support for temp tables.", "code_len": 30, "nl_len": 29, "path": "engine/src/main/java/org/teiid/query/tempdata/TempTableStore.java"}, {"prediction": 0.46213337779045105, "code": "\t/**\n\t * Gets the path where this handle's state is stored.\n\t *\n\t * @return The path where this handle's state is stored.\n\t */\n\tpublic Path getFilePath() {\n\t\treturn filePath;\n\t}", "nl_input": "Add Rescalable Non-Partitioned State\nThis issue is associated with [FLIP-8| https://cwiki.apache.org/confluence/display/FLINK/FLIP-8%3A+Rescalable+Non-Partitioned+State].", "code_len": 54, "nl_len": 54, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FileStateHandle.java"}, {"prediction": 0.4622260630130768, "code": "\t// This one manages the JAXB binding\n\t@Override\n\t@XmlElement(name = \"property\", type = PropertyMetadata.class)\n\t@ManagementProperty(description = \"VDB Properties\", managed=true)\n\tpublic List<PropertyMetadata> getJAXBProperties(){\n\t\treturn super.getJAXBProperties();\n\t}", "nl_input": "Provide a solution to  'merge' two VDBs\nBased on the conversation on this thread\n\nhttp://lists.jboss.org/pipermail/teiid-designer-dev/2010-March/000212.html\n\nTeiid and Designer needs a mechanism, where child VDB can be merged into parent VDB. Designer can use this mechanism to  provide the preview functionality.", "code_len": 74, "nl_len": 85, "path": "client/src/main/java/org/teiid/adminapi/impl/VDBMetaData.java"}], "highest": [{"prediction": 0.9202169179916382, "code": "    public SearchResults getResults()\n    {\n        return results;\n    }", "nl_input": "Searching within search results\nNULL", "code_len": 18, "nl_len": 6, "path": "archiva-modules/archiva-web/archiva-webapp/src/main/java/org/apache/maven/archiva/web/action/SearchAction.java"}, {"prediction": 0.925458550453186, "code": "    public String getId()\n    {\n        return repository.getId();\n    }", "nl_input": "web service interface\nthis needs a new jira component.\n\nWe need a comprehensive web services interface to the application. Like RSS, it should be a new view on the same actions. The more we can derive that from the repository-core interfaces, the better.\nThis should include administration and security.\n\n", "code_len": 18, "nl_len": 68, "path": "archiva-modules/archiva-base/archiva-repository-layer/src/main/java/org/apache/maven/archiva/repository/content/ManagedDefaultRepositoryContent.java"}, {"prediction": 0.925458550453186, "code": "    public String getId()\n    {\n        return repository.getId();\n    }", "nl_input": "web service interface\nthis needs a new jira component.\n\nWe need a comprehensive web services interface to the application. Like RSS, it should be a new view on the same actions. The more we can derive that from the repository-core interfaces, the better.\nThis should include administration and security.\n\n", "code_len": 18, "nl_len": 68, "path": "archiva-modules/archiva-base/archiva-repository-layer/src/main/java/org/apache/maven/archiva/repository/content/ManagedLegacyRepositoryContent.java"}, {"prediction": 0.9446902871131897, "code": "\tvoid init(IterationRuntimeContext context) {\n\t\tthis.runtimeContext = context;\n\t\tthis.outValue = new Tuple2<K, Message>();\n\t\tthis.edgeIterator = new EdgesIterator<K, EV>();\n\t}", "nl_input": "Add a Pregel iteration abstraction to Gelly\nThis issue proposes to add a Pregel/Giraph-like iteration abstraction to Gelly that will only expose one UDF to the user, {{compute()}}. {{compute()}} will have access to both the vertex state and the incoming messages, and will be able to produce messages and update the vertex value.", "code_len": 56, "nl_len": 76, "path": "flink-libraries/flink-gelly/src/main/java/org/apache/flink/graph/spargel/MessagingFunction.java"}, {"prediction": 0.9477491974830627, "code": "  @Override\n  public long getCumulativeCpuTime() {\n    for (ProcessInfo p : processTree.values()) {\n      if (cpuTimeMs == UNAVAILABLE) {\n        cpuTimeMs = 0;\n      }\n      cpuTimeMs += p.cpuTimeMsDelta;\n    }\n    return cpuTimeMs;\n  }", "nl_input": "CPU resource monitoring in Windows\nThe current implementation of getCpuUsagePercent() for WindowsBasedProcessTree is left as unavailable. Attached a proposal of how to do it. I reused the CpuTimeTracker using 1 jiffy=1ms.\n\nThis was left open by YARN-3122.", "code_len": 76, "nl_len": 64, "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/WindowsBasedProcessTree.java"}]}